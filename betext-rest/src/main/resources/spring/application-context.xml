<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:amq="http://activemq.apache.org/schema/core"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:camel="http://camel.apache.org/schema/spring"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://xbean.apache.org/schemas/spring/1.0"
        xmlns:cxf="http://camel.apache.org/schema/cxf"
        xsi:schemaLocation=
                "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

    <context:component-scan base-package="com.betext.**" />

    <amq:broker id="messageBroker" useJmx="true" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:61617"/>
        </amq:transportConnectors>
    </amq:broker>

    <!-- enable Spring @Component scan -->
    <context:component-scan base-package="org.apache.camel.spring.issues.contextscan"/>
    <camelContext id="camelContext" xmlns="http://camel.apache.org/schema/spring">
        <!--<camel:package>com.tmn.bpay.business.router</camel:package>-->
        <contextScan/>
        <camel:consumerTemplate id="consumer" />
        <camel:template id="producer"/>
        <!-- in unit test, only 1 thread should be enough -->

        <threadPoolProfile id="myDefaultProfile"
                           defaultProfile="true"
                           poolSize="10" keepAliveTime="25" maxPoolSize="1000" maxQueueSize="2000" rejectedPolicy="CallerRuns"/>
    </camelContext>

    <!-- When disposed, it will try to stop Camel Context, then the camel context can gracefully stopped -->
    <bean class="com.betext.transportation.service.GracefullyStopCamelContext"/>

    <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML
    <amq:connectionFactory id="tmn-connectionFactory" brokerURL="tcp://localhost:61616" password="" user=""/>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="tmn-connectionFactory"/>
    </bean>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="transacted" value="false"/>
        <property name="concurrentConsumers" value="10"/>
    </bean>

    <bean id="activemq" class="org.apache.camel.component.jms.JmsComponent" depends-on="pooledConnectionFactory">
        <property name="configuration" ref="jmsConfig"/>
    </bean>
    -->
</beans>